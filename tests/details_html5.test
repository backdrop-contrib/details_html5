<?php

class DetailsElementsRenderTest extends BackdropWebTestCase {

  public function setup() {
    parent::setup(array('details_html5'));
  }

  /**
   * Asserts that an array of elements is rendered properly.
   *
   * @param array $elements
   *   An array of associative arrays describing render elements and their
   *   expected markup. Each item in $elements must contain the following:
   *   - 'name': This human readable description will be displayed on the test
   *     results page.
   *   - 'value': This is the render element to test.
   *   - 'expected': This is the expected markup for the element in 'value'.
   */
  function assertElements($elements) {
    foreach($elements as $element) {
      $this->assertIdentical(backdrop_render($element['value']), $element['expected'], '"' . $element['name'] . '" input rendered correctly by backdrop_render().');
    }
  }

  /**
   * Tests system #type 'details'.
   */
  public function testDetails() {
    $elements = array(
      // Basic 'details' element.
      array(
        'name' => "Basic 'details'",
        'value' => array(
          '#type' => 'details',
          '#summary' => t('The summary'),
          '#details' => t('Detailed content'),
        ),
        'expected' => '<details><summary><span>The summary</span></summary><div class="details-content-wrapper">Detailed content</div></details>',
      ),
      // Basic 'details' with custom id and class attributes.
      array(
        'name' => "Basic 'details' with custom attributes",
        'value' => array(
          '#type' => 'details',
          '#summary' => t('The summary'),
          '#details' => t('Detailed content'),
          '#attributes' => array(
            'id' => 'foobar-id',
            'class' => array('fooclass'),
          ),
        ),
        'expected' => '<details id="foobar-id" class="fooclass"><summary><span>The summary</span></summary><div class="details-content-wrapper">Detailed content</div></details>',
      ),
      // Expanded 'details' with child element.
      array(
        'name' => "Details with child",
        'value' => array(
          '#type' => 'details',
          '#summary' => t('The summary'),
          '#open' => TRUE,
          'child' => array(
            '#markup' => 'foobar',
          ),
        ),
        'expected' => '<details open="open"><summary><span>The summary</span></summary><div class="details-child-wrapper">foobar</div></details>',
      ),
    );

    $this->assertElements($elements);
  }

}
